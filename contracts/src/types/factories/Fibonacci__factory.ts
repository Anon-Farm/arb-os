/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Fibonacci } from "../Fibonacci";

export class Fibonacci__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Fibonacci> {
    return super.deploy(overrides || {}) as Promise<Fibonacci>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Fibonacci {
    return super.attach(address) as Fibonacci;
  }
  connect(signer: Signer): Fibonacci__factory {
    return super.connect(signer) as Fibonacci__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Fibonacci {
    return new Contract(address, _abi, signerOrProvider) as Fibonacci;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "TestEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "doFib",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "generateFib",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "getFib",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610282806100206000396000f3fe6080604052600436106100345760003560e01c80632ddec39b1461003957806390a3e3de14610067578063c1cbf7cf146100b6575b600080fd5b6100656004803603602081101561004f57600080fd5b8101908080359060200190929190505050610105565b005b34801561007357600080fd5b506100a06004803603602081101561008a57600080fd5b810190808035906020019092919050505061020e565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100ef600480360360208110156100d957600080fd5b810190808035906020019092919050505061022e565b6040518082815260200191505060405180910390f35b6000600190806001815401808255809150506001900390600052602060002001600090919091909150556000600190806001815401808255809150506001900390600052602060002001600090919091909150556000600290505b818110156101d357600080600283038154811061017957fe5b90600052602060002001546000600184038154811061019457fe5b90600052602060002001540190806001815401808255809150506001900390600052602060002001600090919091909150558080600101915050610160565b507f1440c4dd67b4344ea1905ec0318995133b550f168b4ee959a0da6b503d7d2414816040518082815260200191505060405180910390a150565b600080828154811061021c57fe5b90600052602060002001549050919050565b600061023c60018301610105565b6102458261020e565b905091905056fea2646970667358221220ff70a9c9f4c8f1f0ffb902974db5ab8ccf89349e016157f46e287514d4a7f81a64736f6c634300060b0033";
