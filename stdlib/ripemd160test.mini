//
// Copyright 2020, Offchain Labs, Inc. All rights reserved.
//

use std::bytearray::bytearray_new;
use std::bytearray::bytearray_unmarshalBytes;
use std::bytearray::bytearray_size;
use std::bytearray::bytearray_getByte;
use std::bytearray::bytearray_setByte;
use std::bytearray::bytearray_get64;
use std::bytearray::bytearray_set64;
use std::bytearray::bytearray_get256;
use std::bytearray::bytearray_set256;
use std::bytearray::bytearray_copy;

use std::ripemd160::ripemd160hasher_new;
use std::ripemd160::ripemd160hasher_finish;
use std::ripemd160::ripemd160_byteArray;
use std::ripemd160::ripemd160hasher_pushByte;
use std::ripemd160::ripemd160hasher_push256;

impure func main() {
    if let Some(x) = tests() {
	    asm(x,) { log };
	} else {
	    asm(666,) { log };
	}
}

func tests() -> option<bytes32> {
    let x = asm(
        0x67452301EFCDAB8998BADCFE10325476C3D2E1F0,
        0x8000000000000000000000000000000000000000000000000000000000000000,
        0
    ) bytes32 { ripemd160f };
    if (x != bytes32(0x9c1185a5c5e9fc54612808977ee8f548b2258d31)) {
        return Some(bytes32(1));
    }

	return Some(bytes32(0));
}
