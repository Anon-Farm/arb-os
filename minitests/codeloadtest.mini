//
// Copyright 2020, Offchain Labs, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

func tests(which: uint) -> any {
	if (which == 1) {
		let codept = loadFunc1();
        return unsafecast<func() -> any>(codept)();
	} else {
		return null;
	}
}

func loadFunc1() -> func() {
    let ret = asm() func() { errcodept };

    ret = addInsn(0x34, ret);    // jump
    ret = addInsnImm(0x43, 3, ret);  // [3] swap1

    return ret;
}

func addInsn(op: uint, codept: func()) -> func() {
    return asm(op, codept) func() { pushinsn };
}

func addInsnImm(op: uint, imm: any, codept: func()) -> func() {
    return asm(op, imm, codept) func() { pushinsnimm };
}