//
// Copyright 2020, Offchain Labs, Inc. All rights reserved.
//

use core::kvs::Kvs;
use core::kvs::builtin_kvsNew;
use core::kvs::builtin_kvsGet;
use core::kvs::builtin_kvsSet;
use core::kvs::builtin_kvsHasKey;
use core::kvs::builtin_kvsDelete;
use core::kvs::builtin_kvsForall;
use core::kvs::builtin_kvsSize;

write func main() {
    asm(tests().1) { log };
}

func tests() -> (uint, buffer) {    
    if unsafecast<uint>(
        builtin_kvsForall(builtin_kvsSet(builtin_kvsSet(builtin_kvsNew(), 0, 56), 1, 99), sumForKvsIterator, 0)
    ) != 155 {
	return "map forall did not compute correctly";
    }
    
    ""
}

func sumForKvsIterator(_key: any, value: any, state: any) -> any {
    unsafecast<uint>(value) + unsafecast<uint>(state)
}
