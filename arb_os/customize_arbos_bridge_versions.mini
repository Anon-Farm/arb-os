//
// Copyright 2021, Offchain Labs, Inc. All rights reserved.
//

use bridge_arbos_versions::GlobalsBeforeUpgrade;

use accounts::AccountStore;

use evmCallStack::EvmCallFrame;
use evmCallStack::IncomingRequestAndLogs;

use messages::TxRequestData;

use output::PerBlockReceiptData;
use output::OutputStatistics;

use std::addressSet::AddressPairSet;
use std::addressSet::addressPairSet_new;


public func set_addressRemapExceptions_onUpgrade(_oldGlobals: GlobalsBeforeUpgrade) -> AddressPairSet {
    return addressPairSet_new();
}

public func set_chainOwners_onUpgrade(oldGlobals: GlobalsBeforeUpgrade) -> SetOfAddresses {
    return oldGlobals.chainOwners;
}

public func set_globalAccountStore_onUpgrade(oldGlobals: GlobalsBeforeUpgrade) -> AccountStore {
    let old = oldGlobals.globalAccountStore;
    return old;
}

public func set_globalBlockReceiptData_onUpgrade(oldGlobals: GlobalsBeforeUpgrade) -> struct {
    data: PerBlockReceiptData,
    statsThisBlock: OutputStatistics,
    statsAllTime: OutputStatistics,
    lastArbBlockNum: uint,
    nextSendTimestamp: uint,
} {
    let old = oldGlobals.globalBlockReceiptData;
    return struct {
        data: old.data,
        statsThisBlock: old.statsThisBlock,
        statsAllTime: old.statsAllTime,
        lastArbBlockNum: old.lastArbBlockNum,
        nextSendTimestamp: old.nextSendTimestamp,
    };
}

public func set_globalCallStack_onUpgrade(_oldGlobals: GlobalsBeforeUpgrade) -> option<EvmCallFrame> {
    return None<EvmCallFrame>;
}

public func set_globalCurrentRetryableRequest_onUpgrade(_oldGlobals: GlobalsBeforeUpgrade) -> option<IncomingRequestAndLogs> {
    return None<IncomingRequestAndLogs>;
}

public func set_globalCurrentTxRequest_onUpgrade(_oldGlobals: GlobalsBeforeUpgrade) -> TxRequestData {
    return unsafecast<TxRequestData>(0);   // safe, because the global will be rewritten before used
}

public func set_globalInputQueue_onUpgrade(oldGlobals: GlobalsBeforeUpgrade) -> struct {
    txQ: TxRequestQueue,
    batchQ: IncomingRequestQueueStack,
} {
    return struct {
        txQ: old.globalInputQueue.txQ,
        batchQ: old.globalInputQueue.batchQ,
    };
}

public func set_globalChainParameters_onUpgrade(oldGlobals: GlobalsBeforeUpgrade) -> map<uint, uint> {
    return oldGlobals.globalChainParameters;
}