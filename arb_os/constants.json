{
  "integer": [
    [
      "ArbosVersionNumber",
      6
    ],
    [
      "Address_ArbSys",
      100
    ],
    [
      "Address_ArbAddressTable",
      102
    ],
    [
      "Address_ArbBLS",
      103
    ],
    [
      "Address_ArbFunctionTable",
      104
    ],
    [
      "Address_ArbosTest",
      105
    ],
    [
      "Address_ArbOwner",
      107
    ],
    [
      "Address_ArbGasInfo",
      108
    ],
    [
      "Address_ArbAggregator",
      109
    ],
    [
      "Address_ArbRetryableTx",
      110
    ],
    [
      "Address_ArbStatistics",
      111
    ],
    [
      "Address_ReservedForEthBridge",
      200
    ],
    [
      "EvmOp_stop",
      0
    ],
    [
      "EvmOp_sha3",
      1
    ],
    [
      "EvmOp_address",
      2
    ],
    [
      "EvmOp_balance",
      3
    ],
    [
      "EvmOp_selfbalance",
      4
    ],
    [
      "EvmOp_origin",
      5
    ],
    [
      "EvmOp_caller",
      6
    ],
    [
      "EvmOp_callvalue",
      7
    ],
    [
      "EvmOp_calldataload",
      8
    ],
    [
      "EvmOp_calldatasize",
      9
    ],
    [
      "EvmOp_calldatacopy",
      10
    ],
    [
      "EvmOp_codesize",
      11
    ],
    [
      "EvmOp_codecopy",
      12
    ],
    [
      "EvmOp_extcodesize",
      13
    ],
    [
      "EvmOp_extcodecopy",
      14
    ],
    [
      "EvmOp_extcodehash",
      15
    ],
    [
      "EvmOp_returndatasize",
      16
    ],
    [
      "EvmOp_returndatacopy",
      17
    ],
    [
      "EvmOp_timestamp",
      18
    ],
    [
      "EvmOp_number",
      19
    ],
    [
      "EvmOp_msize",
      20
    ],
    [
      "EvmOp_mload",
      21
    ],
    [
      "EvmOp_mstore",
      22
    ],
    [
      "EvmOp_mstore8",
      23
    ],
    [
      "EvmOp_sload",
      24
    ],
    [
      "EvmOp_sstore",
      25
    ],
    [
      "EvmOp_getjumpaddr",
      26
    ],
    [
      "EvmOp_msize",
      27
    ],
    [
      "EvmOp_log0",
      28
    ],
    [
      "EvmOp_log1",
      29
    ],
    [
      "EvmOp_log2",
      30
    ],
    [
      "EvmOp_log3",
      31
    ],
    [
      "EvmOp_log4",
      32
    ],
    [
      "EvmOp_call",
      33
    ],
    [
      "EvmOp_callcode",
      34
    ],
    [
      "EvmOp_delegatecall",
      35
    ],
    [
      "EvmOp_staticcall",
      36
    ],
    [
      "EvmOp_revert",
      37
    ],
    [
      "EvmOp_revert_knownPc",
      38
    ],
    [
      "EvmOp_return",
      39
    ],
    [
      "EvmOp_selfdestruct",
      40
    ],
    [
      "EvmOp_create",
      41
    ],
    [
      "EvmOp_create2",
      42
    ],
    [
      "EvmOp_chainId",
      43
    ],
    [
      "EvmOp_gasprice",
      44
    ],
    [
      "EvmOp_gaslimit",
      45
    ],
    [
      "EvmOp_blockhash",
      46
    ],
    [
      "NumEvmOps",
      47
    ],
    [
      "AVM_add",
      1
    ],
    [
      "AVM_mul",
      2
    ],
    [
      "AVM_sub",
      3
    ],
    [
      "AVM_div",
      4
    ],
    [
      "AVM_sdiv",
      5
    ],
    [
      "AVM_mod",
      6
    ],
    [
      "AVM_smod",
      7
    ],
    [
      "AVM_addmod",
      8
    ],
    [
      "AVM_mulmod",
      9
    ],
    [
      "AVM_exp",
      10
    ],
    [
      "AVM_signextend",
      11
    ],
    [
      "AVM_lt",
      16
    ],
    [
      "AVM_gt",
      17
    ],
    [
      "AVM_slt",
      18
    ],
    [
      "AVM_sgt",
      19
    ],
    [
      "AVM_eq",
      20
    ],
    [
      "AVM_iszero",
      21
    ],
    [
      "AVM_and",
      22
    ],
    [
      "AVM_or",
      23
    ],
    [
      "AVM_xor",
      24
    ],
    [
      "AVM_not",
      25
    ],
    [
      "AVM_byte",
      26
    ],
    [
      "AVM_shl",
      27
    ],
    [
      "AVM_shr",
      28
    ],
    [
      "AVM_sar",
      29
    ],
    [
      "AVM_hash",
      32
    ],
    [
      "AVM_type",
      33
    ],
    [
      "AVM_ethhash2",
      34
    ],
    [
      "AVM_keccakf",
      35
    ],
    [
      "AVM_sha256f",
      36
    ],
    [
      "AVM_pop",
      48
    ],
    [
      "AVM_spush",
      49
    ],
    [
      "AVM_rpush",
      50
    ],
    [
      "AVM_rset",
      51
    ],
    [
      "AVM_jump",
      52
    ],
    [
      "AVM_cjump",
      53
    ],
    [
      "AVM_stackempty",
      54
    ],
    [
      "AVM_pcpush",
      55
    ],
    [
      "AVM_auxpush",
      56
    ],
    [
      "AVM_auxpop",
      57
    ],
    [
      "AVM_auxstackempty",
      58
    ],
    [
      "AVM_nop",
      59
    ],
    [
      "AVM_errpush",
      60
    ],
    [
      "AVM_errset",
      61
    ],
    [
      "AVM_dup0",
      64
    ],
    [
      "AVM_dup1",
      65
    ],
    [
      "AVM_dup2",
      66
    ],
    [
      "AVM_swap1",
      67
    ],
    [
      "AVM_swap2",
      68
    ],
    [
      "AVM_tget",
      80
    ],
    [
      "AVM_tset",
      81
    ],
    [
      "AVM_tlen",
      82
    ],
    [
      "AVM_xget",
      83
    ],
    [
      "AVM_xset",
      84
    ],
    [
      "AVM_breakpoint",
      96
    ],
    [
      "AVM_log",
      97
    ],
    [
      "AVM_send",
      112
    ],
    [
      "AVM_inboxpeek",
      113
    ],
    [
      "AVM_inbox",
      114
    ],
    [
      "AVM_error",
      115
    ],
    [
      "AVM_halt",
      116
    ],
    [
      "AVM_setgas",
      117
    ],
    [
      "AVM_pushgas",
      118
    ],
    [
      "AVM_errcodepoint",
      119
    ],
    [
      "AVM_pushinsn",
      120
    ],
    [
      "AVM_pushinsnimm",
      121
    ],
    [
      "AVM_sideload",
      123
    ],
    [
      "AVM_ecrecover",
      128
    ],
    [
      "AVM_ecadd",
      129
    ],
    [
      "AVM_ecmul",
      130
    ],
    [
      "AVM_ecpairing",
      131
    ],
    [
      "AVM_debugprint",
      144
    ],
    [
      "L1MessageType_ethDeposit",
      0
    ],
    [
      "L1MessageType_L2",
      3
    ],
    [
      "L1MessageType_chainInit",
      4
    ],
    [
      "L1MessageType_endOfBlock",
      6
    ],
    [
      "L1MessageType_L2FundedByL1",
      7
    ],
    [
      "L1MessageType_rollupProtocolEvent",
      8
    ],
    [
      "L1MessageType_submitRetryableTx",
      9
    ],
    [
      "L1MessageType_L2ForGasEstimation",
      10
    ],
    [
      "L2MessageType_unsignedEOATx",
      0
    ],
    [
      "L2MessageType_unsignedContractTx",
      1
    ],
    [
      "L2MessageType_nonmutatingCall",
      2
    ],
    [
      "L2MessageType_batch",
      3
    ],
    [
      "L2MessageType_heartbeat",
      6
    ],
    [
      "L2MessageType_signedCompressedTx",
      7
    ],
    [
      "L2MessageType_blsBatch",
      8
    ],
    [
      "ProtoEvent_createNode",
      0
    ],
    [
      "ProtoEvent_confirmNode",
      1
    ],
    [
      "ProtoEvent_rejectNode",
      2
    ],
    [
      "ProtoEvent_newStake",
      3
    ],
    [
      "ProtoEvent_claimNode",
      4
    ],
    [
      "ProtoEvent_debug",
      255
    ],
    [
      "TxResultCode_success",
      0
    ],
    [
      "TxResultCode_revert",
      1
    ],
    [
      "TxResultCode_congestion",
      2
    ],
    [
      "TxResultCode_noGasFunds",
      3
    ],
    [
      "TxResultCode_insufficientBalance",
      4
    ],
    [
      "TxResultCode_badSequenceNum",
      5
    ],
    [
      "TxResultCode_formatError",
      6
    ],
    [
      "TxResultCode_cannotDeployAtAddress",
      7
    ],
    [
      "TxResultCode_exceededTxGasLimit",
      8
    ],
    [
      "TxResultCode_insufficientGasForBaseFee",
      9
    ],
    [
      "TxResultCode_unknownFailure",
      255
    ],
    [
      "EVMCallType_call",
      0
    ],
    [
      "EVMCallType_callcode",
      1
    ],
    [
      "EVMCallType_delegatecall",
      2
    ],
    [
      "EVMCallType_staticcall",
      3
    ],
    [
      "EVMCallType_constructor",
      4
    ],
    [
      "LogType_txReceipt",
      0
    ],
    [
      "LogType_blockSummary",
      1
    ],
    [
      "LogType_send",
      2
    ],
    [
      "LogType_sendMerkleTree",
      3
    ],
    [
      "SendType_sendTxToL1",
      3
    ],
    [
      "AVMSendType_batch",
      0
    ],
    [
      "InitOption_setChargingParams",
      2
    ],
    [
      "InitOption_setDefaultAggregator",
      3
    ],
    [
      "Charging_DefaultL1GasPerL2Tx",
      3700
    ],
    [
      "Charging_DefaultL1GasPerCalldataByte",
      16
    ],
    [
      "Charging_DefaultL1GasPerStorage",
      2000
    ],
    [
      "Charging_DefaultArbGasDivisor",
      10000
    ],
    [
      "Charging_AssumedBatchCostL1Gas",
      50000
    ],
    [
      "Charging_GasPoolDepthSeconds",
      60
    ],
    [
      "Charging_RetryableTxRepriceIntervalSeconds",
      900
    ],
    [
      "NetFee_defaultRateNumerator",
      15
    ],
    [
      "NetFee_defaultRateDenominator",
      100
    ],
    [
      "Sequencer_maxDelaySeconds",
      983040
    ],
    [
      "Sequencer_deltaSeconds",
      0
    ],
    [
      "PluggableModuleID_rollupTracker",
      0
    ],
    [
      "PluggableModuleID_precompile_0x05",
      1
    ],
    [
      "RetryBuffer_DefaultLifetimeSeconds",
      604800
    ],
    [
      "EVMWriteL1GasCost",
      5000
    ],
    [
      "EVMNonZeroBalanceCallStipend",
      2300
    ],
    [
      "ArbitrumNonZeroBalanceCallStipend",
      20000
    ],
    [
      "TwoToThe32",
      4294967296
    ],
    [
      "SecondsPerBlockNumerator",
      2
    ],
    [
      "SecondsPerBlockDenominator",
      1
    ],
    [
      "DefaultSpeedLimitPerSecond",
      100000000
    ],
    [
      "DefaultSecondsPerSend",
      900
    ],
    [
      "Estimate_L1GasCostPerNode",
      220000
    ],
    [
      "Estimate_L1GasPrice",
      100000000000
    ]
  ],
  "hex": [
    [
      "Charging_DefaultNetworkFeeRecipient",
      "0"
    ],
    [
      "Charging_DefaultCongestionFeeRecipient",
      "0"
    ],
    [
      "SpecialAccount_gasAccountingReserve",
      "af6cbc19f66dec07f790912226744d744f04b37b666b9343317df33a5114fb96"
    ],
    [
      "BLSSignatureDomainBase",
      "73a92f91d473214defd5ffa91d036007eb2e6487fffaa551835e988fb24aaa2b"
    ],
    [
      "EVMLogTopicForL2ToL1Send",
      "5baaa87db386365b5c161be377bc3d8e317e8d98d71a3ca7ed7d555340c8f767"
    ]
  ],
  "contract": [
    "ArbAggregator",
    "ArbRetryableTx",
    "ArbStatistics",
    "ArbOwner"
  ]
}