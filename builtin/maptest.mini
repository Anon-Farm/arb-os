//
// Copyright 2020, Offchain Labs, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

func main() {
	asm(tests(),) { log };
}

func tests() -> uint {
	let m = newmap<(uint, uint), uint>;
	if (m[(17, 18,)] != (unsafecast<uint>(null), false,)) {
		return 1;
	}

	let m = newmap<uint, uint>;
	if (m[17].1 != false) {
		return 2;
	}

	let m = newmap<(uint, uint), uint>;
	m = m with { [(999, 321,)] = 42 };
	if ( m[(999, 321,)] != (42, true,) ) { 
		return 3;
	}

	m = newmap<(uint, uint), uint>;
	m = m with { [(999, 321,)] = 42 };
	m = m with { [(0, 0,)] = 73 };
	if ( m[(999, 321,)] != (42, true,) ) { 
		return 4;
	}

	m = newmap<(uint, uint), uint>;
	m = m with { [(999, 321,)] = 42 };
	m = m with { [(0, 0,)] = 73 };
	m = m with { [(999, 321,)] = 13 };
	m = m with { [(0, 0,)] = 173 };
	if (m[(999, 321,)] != (13, true,) ){
		return 5;
	}

	return 0;
}
