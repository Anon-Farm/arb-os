//
// Copyright 2020, Offchain Labs, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

var global0: uint;
var global1: uint;
var global2: any;
var global3: (uint, int, bool);
var global4: int;
var global5: bool;
var global6: uint;
var global7: []uint;
var global8: [13]uint;
var global9: uint;

type MyType = uint
var global10: MyType;


func tests(which: uint) -> any {
    if (which == 0) {
        global0 = 3;
        return global0;
    } elseif (which == 1) {
        global9 = 4;
        return global9;
    } elseif (which == 2) {
        global0 = 5;
        global9 = 4;
        return global0;
    } elseif (which == 3) {
        global9 = 6;
        global0 = 3;
        return global9;
    } elseif (which == 4) {
        let sum = asm (4, 0, 3) uint {
            plus
            plus
        };
        return sum;
    } elseif (which == 5) {
        global10 = 3;
        if (global10 == 3) {
            return 13;
        } else {
            return 0;
        }
    } else {
        return null;
    }
}